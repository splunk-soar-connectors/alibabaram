{
    "appid": "29b675db-ba53-444c-bd99-dd1304b919fe",
    "name": "Alibaba RAM",
    "description": "This app integrates with Alibaba Resource Access Management (Alibaba RAM) to support various containment, corrective, and investigate actions",
    "type": "identity management",
    "product_vendor": "Alibaba",
    "logo": "logo_alibabaram.svg",
    "logo_dark": "logo_alibabaram_dark.svg",
    "product_name": "Alibaba Resource Access Management",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2019-2025 Splunk Inc.",
    "app_version": "2.0.7",
    "utctime_updated": "2024-10-01T11:00:18.000000Z",
    "package_name": "phantom_alibabaram",
    "main_module": "alibabaram_connector.py",
    "min_phantom_version": "6.2.1",
    "fips_compliant": true,
    "latest_tested_versions": [
        "Alibaba RAM Cloud, 2021 on 18 June, 2021"
    ],
    "python_version": "3",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "access_key": {
            "description": "Access Key ID",
            "data_type": "password",
            "required": true,
            "order": 0
        },
        "secret_key": {
            "description": "Secret Access key",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "region_id": {
            "description": "Region ID",
            "data_type": "string",
            "required": true,
            "value_list": [
                "Asia Pacific NE 1",
                "Asia Pacific SE 1",
                "Asia Pacific SE 2",
                "Asia Pacific SE 3",
                "Asia Pacific SE 5",
                "Asia Pacific SOU 1",
                "China East 1",
                "China East 2",
                "China North 1",
                "China North 2",
                "China North 3",
                "China North 5",
                "China South 1",
                "China SW 1",
                "EU Central 1",
                "Hong Kong",
                "Middle East 1",
                "UK (London)",
                "US East 1",
                "US West 1"
            ],
            "default": "China East 1",
            "order": 2
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list users",
            "identifier": "list_users",
            "description": "List the RAM users",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "limit": {
                    "description": "Maximum number of RAM users to be fetched",
                    "data_type": "numeric",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        100
                    ]
                },
                {
                    "data_path": "action_result.data.*.Comments",
                    "data_type": "string",
                    "example_values": [
                        "Test Comment"
                    ],
                    "column_name": "Comments",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:28:48Z"
                    ],
                    "column_name": "Create Date",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user display name"
                    ],
                    "column_name": "Display Name",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.UpdateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:28:48Z"
                    ],
                    "column_name": "Update Date",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.UserId",
                    "data_type": "string",
                    "example_values": [
                        "291581163510528087"
                    ],
                    "column_name": "User ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.UserName",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary.total_users",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total users: 3"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list roles",
            "identifier": "list_roles",
            "description": "List the RAM roles",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "limit": {
                    "description": "Maximum number of RAM roles to be fetched",
                    "data_type": "numeric",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        100
                    ]
                },
                {
                    "data_path": "action_result.data.*.Arn",
                    "data_type": "string",
                    "example_values": [
                        "acs:ram::5211362082633686:role/test"
                    ],
                    "column_name": "Roles ARN",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:32:18Z"
                    ],
                    "column_name": "Create Date",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.Description",
                    "data_type": "string",
                    "example_values": [
                        "This is created for testing"
                    ],
                    "column_name": "Role Description",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.MaxSessionDuration",
                    "data_type": "numeric",
                    "example_value": 3600
                },
                {
                    "data_path": "action_result.data.*.RoleId",
                    "data_type": "string",
                    "example_values": [
                        "386284258992406563"
                    ],
                    "column_name": "Role ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.RoleName",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ],
                    "contains": [
                        "alibabaram role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.UpdateDate",
                    "data_type": "string",
                    "example_value": "2019-07-19T04:32:18Z"
                },
                {
                    "data_path": "action_result.summary.total_roles",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total roles: 2"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list groups",
            "identifier": "list_groups",
            "description": "List the RAM user groups",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "limit": {
                    "description": "Maximum number of RAM user groups to be fetched",
                    "data_type": "numeric",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        100
                    ]
                },
                {
                    "data_path": "action_result.data.*.Comments",
                    "data_type": "string",
                    "example_values": [
                        "Test group for Alibaba"
                    ],
                    "column_name": "Comments",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-02T20:39:17Z"
                    ],
                    "column_name": "Create Date",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.GroupId",
                    "data_type": "string",
                    "example_value": "g-f8dd2fad4c440cd9"
                },
                {
                    "data_path": "action_result.data.*.GroupName",
                    "data_type": "string",
                    "example_values": [
                        "alibaba-test-group"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.UpdateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-02T20:39:17Z"
                    ],
                    "column_name": "Update Date",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary.total_groups",
                    "data_type": "numeric",
                    "example_values": [
                        3
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total groups: 3"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "list policies",
            "identifier": "list_policies",
            "description": "List the RAM policies",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "limit": {
                    "description": "Maximum number of RAM policies to be fetched",
                    "data_type": "numeric",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        15
                    ]
                },
                {
                    "data_path": "action_result.data.*.AttachmentCount",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2015-04-28T16:15:44Z"
                    ],
                    "column_name": "Create Date",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.DefaultVersion",
                    "data_type": "string",
                    "example_values": [
                        "v1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Description",
                    "data_type": "string",
                    "example_values": [
                        "This is test description"
                    ],
                    "column_name": "Description",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.PolicyName",
                    "data_type": "string",
                    "example_values": [
                        "AdministratorAccess"
                    ],
                    "contains": [
                        "alibabaram policy name"
                    ],
                    "column_name": "Policy Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.PolicyType",
                    "data_type": "string",
                    "example_values": [
                        "System"
                    ],
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "column_name": "Policy Type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.UpdateDate",
                    "data_type": "string",
                    "example_values": [
                        "2017-04-27T16:48:07Z"
                    ],
                    "column_name": "Update Date",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.summary.total_policies",
                    "data_type": "numeric",
                    "example_values": [
                        15
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total policies: 15"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "add user",
            "identifier": "add_user",
            "undo": "remove user",
            "description": "Add a user to the provided group",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                },
                "group_name": {
                    "description": "Name of the group",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram group name"
                    ],
                    "required": true,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User: test1 is successfully added to the group: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove user",
            "identifier": "remove_user",
            "undo": "add user",
            "description": "Remove a user from the provided group",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                },
                "group_name": {
                    "description": "Name of the group",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram group name"
                    ],
                    "required": true,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "User: test1 is successfully removed from the group: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "attach policy",
            "identifier": "attach_policy",
            "undo": "detach policy",
            "description": "Attach a policy to the provided user, group, or role",
            "verbose": "User can either attach the System or the Custom policies of the required entity one at a time but not both together. If the user provides user_name, group_name, and role_name parameters, the policies will be attached for all three entities, first it will attach for user_name then group_name followed by role_name. If the action fails at an intermediate stage, the policies attachment process until that point of time cannot be undone. i.e. if the policy attachment process is successful for the given user_name, group_name but fails while attaching policies for the role_name, then, policies already attached to the user and the group, in the earlier steps cannot be undone.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram policy name"
                    ],
                    "required": true,
                    "order": 0
                },
                "policy_type": {
                    "description": "Type of the policy",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "required": true,
                    "value_list": [
                        "System",
                        "Custom"
                    ],
                    "order": 1
                },
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "order": 2
                },
                "group_name": {
                    "description": "Name of the group",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram group name"
                    ],
                    "order": 3
                },
                "role_name": {
                    "description": "Name of the role",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram role name"
                    ],
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "example_values": [
                        "AliyunMTSFullAccess"
                    ],
                    "contains": [
                        "alibabaram policy name"
                    ],
                    "column_name": "Policy Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "System"
                    ],
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "column_name": "Policy Type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.role_name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ],
                    "contains": [
                        "alibabaram role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Policy: AliyunMTSFullAccess is successfully attached to the user: test1, group: test1, and role: test"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "detach policy",
            "identifier": "detach_policy",
            "undo": "attach policy",
            "description": "Detach a policy from the provided user, group, or role",
            "verbose": "User can either detach the System or the Custom policies of the required entity one at a time but not both together. If the user provides user_name, group_name, and role_name parameters, the policies will be detached for all three entities, first it will detach for user_name then group_name followed by role_name. If the action fails at an intermediate stage, the policies detachment process until that point of time cannot be undone. i.e. if the policy detachment process is successful for the given user_name, group_name but fails while detaching policies for the role_name, then, policies already detached from the user and the group, in the earlier steps cannot be undone.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "policy_name": {
                    "description": "Name of the policy",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram policy name"
                    ],
                    "required": true,
                    "order": 0
                },
                "policy_type": {
                    "description": "Type of the policy",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "required": true,
                    "value_list": [
                        "System",
                        "Custom"
                    ],
                    "order": 1
                },
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "order": 2
                },
                "group_name": {
                    "description": "Name of the group",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram group name"
                    ],
                    "order": 3
                },
                "role_name": {
                    "description": "Name of the role",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram role name"
                    ],
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.policy_name",
                    "data_type": "string",
                    "example_values": [
                        "AliyunMTSFullAccess"
                    ],
                    "contains": [
                        "alibabaram policy name"
                    ],
                    "column_name": "Policy Name",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "System"
                    ],
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "column_name": "Policy Type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.role_name",
                    "data_type": "string",
                    "example_values": [
                        "test"
                    ],
                    "contains": [
                        "alibabaram role name"
                    ],
                    "column_name": "Role Name",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Policy: AliyunMTSFullAccess is successfully detached from the user: test1, group: test1, and role: test"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "describe user",
            "identifier": "describe_user",
            "description": "Fetch the user details, details of the associated user groups, and user policies",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Comments",
                    "data_type": "string",
                    "example_values": [
                        "This is test comment"
                    ]
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:28:48Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user display name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Email",
                    "data_type": "string",
                    "example_values": [
                        "test1@5211362082633686.onaliyun.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.LastLoginDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-18T04:28:48Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.MobilePhone",
                    "data_type": "string",
                    "example_values": [
                        "1-4153203200"
                    ]
                },
                {
                    "data_path": "action_result.data.*.UpdateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:28:48Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.UserId",
                    "data_type": "string",
                    "example_values": [
                        "291581163510528087"
                    ]
                },
                {
                    "data_path": "action_result.data.*.UserName",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_groups.*.Comments",
                    "data_type": "string",
                    "example_values": [
                        "This group is created for testing purpose"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_groups.*.GroupName",
                    "data_type": "string",
                    "example_values": [
                        "test_1"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_groups.*.JoinDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:29:13Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_policies.*.AttachDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-22T07:57:36Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_policies.*.DefaultVersion",
                    "data_type": "string",
                    "example_values": [
                        "v1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_policies.*.Description",
                    "data_type": "string",
                    "example_values": [
                        "This is sample testing description"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_policies.*.PolicyName",
                    "data_type": "string",
                    "example_values": [
                        "AdministratorAccess"
                    ]
                },
                {
                    "data_path": "action_result.data.*.user_policies.*.PolicyType",
                    "data_type": "string",
                    "example_values": [
                        "System"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully fetched the details of the user: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 10,
                "title": "Group Info",
                "view": "alibabaram_view.display_view"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "describe group",
            "identifier": "describe_group",
            "description": "List all policies and users details for the provided group name",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "group_name": {
                    "description": "Name of the group",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram group name"
                    ],
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "contains": [
                        "alibabaram group name"
                    ],
                    "example_values": [
                        "test1"
                    ]
                },
                {
                    "data_path": "action_result.data.*.policies.*.AttachDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:29:45Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.policies.*.DefaultVersion",
                    "data_type": "string",
                    "example_values": [
                        "v2"
                    ]
                },
                {
                    "data_path": "action_result.data.*.policies.*.Description",
                    "data_type": "string",
                    "example_values": [
                        "This is test description"
                    ]
                },
                {
                    "data_path": "action_result.data.*.policies.*.PolicyName",
                    "data_type": "string",
                    "example_values": [
                        "ReadOnlyAccess"
                    ],
                    "contains": [
                        "alibabaram policy name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.policies.*.PolicyType",
                    "data_type": "string",
                    "example_values": [
                        "System"
                    ],
                    "contains": [
                        "alibabaram policy type"
                    ]
                },
                {
                    "data_path": "action_result.data.*.users.*.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "test_1"
                    ],
                    "contains": [
                        "alibabaram user display name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.users.*.JoinDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:29:03Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.users.*.UserName",
                    "data_type": "string",
                    "example_values": [
                        "test_1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ]
                },
                {
                    "data_path": "action_result.summary.total_policies",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.summary.total_users",
                    "data_type": "numeric",
                    "example_values": [
                        2
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Total policies: 2, Total users: 2"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 10,
                "title": "Group Info",
                "view": "alibabaram_view.display_view"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "replace groups",
            "identifier": "replace_groups",
            "description": "Replace all the existing groups of the user with the provided groups",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                },
                "groups": {
                    "description": "Comma-separated list of group names",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram groups"
                    ],
                    "required": true,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.groups",
                    "data_type": "string",
                    "example_values": [
                        "test1,test_blank"
                    ],
                    "contains": [
                        "alibabaram groups"
                    ],
                    "column_name": "Group Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Provided groups are successfully replaced for the user: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "replace policies",
            "identifier": "replace_policies",
            "description": "Replace all the existing policies of the user or the group with the provided policies",
            "verbose": "User can either replace the System or the Custom policies of the required entity one at a time but not both together. If the user provides both the user_name and the group_name parameters, the policies will be replaced for both the entities. If the action fails at an intermediate stage, the policies replacement process until that point of time cannot be undone. i.e. if the policy replacement process is successful for the given user_name and fails while replacing policies for the group_name, then, policies already replaced for the users in the earlier steps cannot be undone.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "order": 0
                },
                "group_name": {
                    "description": "Name of the group",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram group name"
                    ],
                    "order": 1
                },
                "policies": {
                    "description": "Comma-separated list of policy names",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram policies"
                    ],
                    "required": true,
                    "order": 2
                },
                "policy_type": {
                    "description": "Type of the policy",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "required": true,
                    "value_list": [
                        "System",
                        "Custom"
                    ],
                    "order": 3
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.group_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram group name"
                    ],
                    "column_name": "Group Name",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.policies",
                    "data_type": "string",
                    "example_values": [
                        "AliyunOSSFullAccess,AliyunRDSFullAccess"
                    ],
                    "contains": [
                        "alibabaram policies"
                    ],
                    "column_name": "Policies",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.policy_type",
                    "data_type": "string",
                    "example_values": [
                        "System"
                    ],
                    "contains": [
                        "alibabaram policy type"
                    ],
                    "column_name": "Policy Type",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Provided policies are successfully replaced for the user: test1 and group: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove policies",
            "identifier": "strip_policies",
            "description": "Remove all the existing policies of the provided user",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully removed all the policies from the user: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "remove groups",
            "identifier": "strip_groups",
            "description": "Remove all the associations of the groups from the provided user",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ],
                    "column_name": "Status",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully removed all the group associations of the user: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "update user",
            "identifier": "update_user",
            "description": "Updates the basic information of the RAM user",
            "verbose": "As per the API document of Alibaba RAM, the parameter new_username is not mandatory for running the action update user and hence, it has been kept optional in the action. But, the API used here still gives an error mentioning that new_username is mandatory if we do not provide the value for new_username. The mobile_number parameter should follow the format <International Area Code>-<Mobile Phone Number> e.g. 86-18600001234.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "user_name": {
                    "description": "Username of the user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "required": true,
                    "order": 0
                },
                "comment": {
                    "description": "The comment for updating the RAM user details",
                    "data_type": "string",
                    "order": 1
                },
                "email": {
                    "description": "Updated email of the RAM user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "email"
                    ],
                    "order": 2
                },
                "mobile_number": {
                    "description": "Updated mobile number of the RAM user",
                    "data_type": "string",
                    "order": 3
                },
                "new_username": {
                    "description": "Updated username of the RAM user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user name"
                    ],
                    "order": 4
                },
                "display_name": {
                    "description": "Updated display name of the RAM user",
                    "data_type": "string",
                    "primary": true,
                    "contains": [
                        "alibabaram user display name"
                    ],
                    "order": 5
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.comment",
                    "data_type": "string",
                    "example_values": [
                        "This is a test comment for updating existing user"
                    ]
                },
                {
                    "data_path": "action_result.parameter.display_name",
                    "data_type": "string",
                    "example_values": [
                        "Test1_New"
                    ],
                    "contains": [
                        "alibabaram user display name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "example_values": [
                        "test1_new@5211362082633686.onaliyun.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.parameter.mobile_number",
                    "data_type": "string",
                    "example_values": [
                        "1-4155096996"
                    ]
                },
                {
                    "data_path": "action_result.parameter.new_username",
                    "data_type": "string",
                    "example_values": [
                        "test1_new"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ]
                },
                {
                    "data_path": "action_result.parameter.user_name",
                    "data_type": "string",
                    "example_values": [
                        "test1"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ]
                },
                {
                    "data_path": "action_result.data.*.Comments",
                    "data_type": "string",
                    "example_values": [
                        "This is a test comment for updating existing user"
                    ],
                    "column_name": "Comments",
                    "column_order": 7
                },
                {
                    "data_path": "action_result.data.*.CreateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-19T04:28:48Z"
                    ],
                    "column_name": "Create Date",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.data.*.DisplayName",
                    "data_type": "string",
                    "example_values": [
                        "Test1_New"
                    ],
                    "contains": [
                        "alibabaram user display name"
                    ],
                    "column_name": "Display Name",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.Email",
                    "data_type": "string",
                    "example_values": [
                        "test1_new@5211362082633686.onaliyun.com"
                    ],
                    "contains": [
                        "email"
                    ],
                    "column_name": "Email",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.MobilePhone",
                    "data_type": "string",
                    "example_values": [
                        "1-4155096996"
                    ],
                    "column_name": "Mobile Phone",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.UpdateDate",
                    "data_type": "string",
                    "example_values": [
                        "2019-07-22T02:36:18Z"
                    ],
                    "column_name": "Update Date",
                    "column_order": 5
                },
                {
                    "data_path": "action_result.data.*.UserId",
                    "data_type": "string",
                    "example_values": [
                        "291581163510528087"
                    ],
                    "column_name": "User ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.UserName",
                    "data_type": "string",
                    "example_values": [
                        "test1_new"
                    ],
                    "contains": [
                        "alibabaram user name"
                    ],
                    "column_name": "Username",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Successfully updated the details for the User: test1"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "aliyun_python_sdk_core",
                "input_file": "wheels/py3/aliyun_python_sdk_core-2.13.5-py3-none-any.whl"
            },
            {
                "module": "aliyun_python_sdk_ram",
                "input_file": "wheels/py3/aliyun_python_sdk_ram-3.1.0-py3-none-any.whl"
            },
            {
                "module": "jmespath",
                "input_file": "wheels/shared/jmespath-0.9.3-py2.py3-none-any.whl"
            }
        ]
    }
}
